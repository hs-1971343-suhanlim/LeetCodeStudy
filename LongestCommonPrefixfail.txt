내가 생각한 문제: 여러개의 문자열 중 중복으로 들어가는 문자 혹은 문자열 중 가장 긴 것 을 반환
실제 문제: 시작하는 첫 글자부터 중복을 허용하여 찾는 것 (접두사 !!!! 야발년아.)


문자열 안에서 같은 문자열을 찾아서 리턴...
모든 문자열을 검사하여 동일하게 포함하고 있는 문자 탐색
	전체 문자 수만큼 반복을 돌려서 포함하고 있는 문자 탐색
		첫번째 배열에서 들어있는 문자들 추출
			두번째 세번째 부터는 공통되는 문자들만 비교
공통으로 들어간 문자들을 따로 2차원 배열로 만들어서 관리
2차원 배열의 요소 중에 가장 긴 요소를 반환
if(i==1) {
    				for(int k='a'; k<='z'; k++) {
    					if(strs[i].charAt(j)==(char)k)
    						v.add((char)k);
    				}
    			}
    			else {
    				for(int k=0;k<v.size();k++) {
    					if(strs[i].charAt(j)==v.elementAt(k))
    				}
문자열 배열 사용 (벡터를 쓰려고 했던 이유: 쉽게 배열의 내용물을 제거 하기 위해서
처음: 0번 1번 인덱스 비교
	같은 문자열들만 따로 추출해서 문자열 배열로 만듬
그 후: 추출된 문자열 배열 안의 요소가 문자열 안에 있으면 남고 없으면 제거
최종적으로 남은 문자열 중에 가장 긴 것 을 리턴
